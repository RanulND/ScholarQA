{"Title": "Stateful Serverless Application Placement in MEC With Function and State Dependencies", "Doi": "10.1109/TC.2023.3262947", "Authors": ["z. xu", "l. zhou", "w. liang", "q. xia", "w. xu", "w. ren", "h. ren", "p. zhou"], "Key Words": ["cloud computing", "function placement", "machine learning method", "multi-access edge computing", "online learning", "serverless computing", "the multi-armed bandit method"], "Abstract": "serverless computing is emerging as an enabling technology for elastic and low cost artificial intelliegence applications in the edge of core networks. it allows artificial intelliegence developers to decompose a complex training and time sensitive inference task into multiple functions with dependency and upload the task to a multi access edge computing platform  mec  for execution. serverless computing adopts a popular design principle  the disaggregation of storage and computation making the functions \u201a\u00e4\u00f2stateless\u201a\u00e4\u00f4. however most artificial intelliegence applications are \u201a\u00e4\u00f2stateful\u201a\u00e4\u00f4 and rely on an external storage service to manage their states  ephemeral data . this will incur a prohibitively long delay for delay sensitive artificial intelliegence applications if external services storing the states are far from the serverless functions. motivated by this critical issue in this paper we investigate a fundamental problem in serverless computing \u201a\u00e4\u00ec the stateful serverless application placement problem for which we first propose an efficient heuristic algorithm and then devise an approximation algorithm with a provable approximation ratio for one of its special cases. we also consider the online version of the problem and develop an online learning driven algorithm with a bounded regret. the crux of the online algorithm is the adoption of the multi armed bandits technique for dynamic admissions of inference requests under the uncertainty of both data volumes of requests and network delays. we finally evaluate the performance of the proposed algorithms through experimental simulations. simulation results show that the proposed algorithms outperform their counterparts reducing at least 32% in the total cost and 27% of the average delay.", "Pub Date": "2023-08-08"}