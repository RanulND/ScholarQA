{"Title": "Program Synthesis with Generative Pre-trained Transformers and Grammar-Guided Genetic Programming Grammar", "Doi": "10.1109/LA-CCI58595.2023.10409384", "Authors": ["n. tao", "a. ventresque", "t. saber"], "Key Words": ["program synthesis", "grammar guided genetic programming", "generative pre-trained transformers", "large language models", "grammar"], "Abstract": "grammar guided genetic programming  g3p  is widely recognised as one of the most successful approaches to program synthesis. using a set of input output tests g3p evolves programs that fit a defined bnf grammar and that are capable of solving a wide range of program synthesis problems. however g3p\u201a\u00e4\u00f4s inability to scale to more complex problems has limited its applicability. recently generative pre trained transformers  gpts  have shown promise in revolutionizing program synthesis by generating code based on natural language prompts. however challenges such as ensuring correctness and safety still need to be addressed as some gpt generated programs might not work while others might include security vulnerabilities or blacklisted library calls. in this work we proposed to combine gpt  in our case chatgpt  with a g3p system forcing any synthesised program to fit the bnf grammar thus offering an opportunity to evolve fix incorrect programs and reducing security threats. in our work we leverage gpt generated programs in g3p\u201a\u00e4\u00f4s initial population. however since gpt generated programs have an arbitrary structure the initial work that we undertake is to devise a technique that maps such programs to a predefined bnf grammar before seeding the code into g3p\u201a\u00e4\u00f4s initial population. by seeding the grammar mapped code into the population of our g3p system we were able to successfully improve some of the desired programs using a well known program synthesis benchmark. however in its default configuration g3p is not successful in fixing some incorrect gpt generated programs\u201a\u00e4\u00eceven when they are close to a correct program. we analysed the performance of our approach in depth and discussed its limitations and possible future improvements.", "Pub Date": "2024-01-26"}