{"Title": "On the Suitability of LSP and DAP for Domain-Specific Languages", "Doi": "10.1109/MODELS-C59198.2023.00066", "Authors": ["j. enet", "e. bousse", "m. tisi", "g. suny\u221a\u00a9"], "Key Words": ["programming languages and software", "algorithm/protocol design and analysis", "testing and debugging", "document and text editing"], "Abstract": "domain specific languages  dsls  help manage the growing complexity of systems by facilitating their description and execution or simulation via tailored languages. a large part of the development costs of a dsl comes from building the associated tools it requires such as an editor or a debugger. to reduce these costs the language server protocol  lsp  and debug adapter protocol  dap  enable the creation of generic tooling interfaces which rely on standardized services exposed by languages. however as these protocols have been designed for general purpose languages  gpls  their applicability to dsls has no yet been extensively studied. in this paper we analyze both lsp and dap with an emphasis regarding their relevance for the development of tooling for dsls. we provide both a high level insight into these protocols such as a dependency graph of their services and a more fine grained qualitative analysis of each service. we show that while some services defined by these two protocols can be provided by any dsl others make strong assumptions on the concepts that should be part of the considered dsl. conversely domain specific concepts available in some dsls are not exploitable through these protocols thus reducing the capabilities of generic tools.", "Pub Date": "2023-12-22"}