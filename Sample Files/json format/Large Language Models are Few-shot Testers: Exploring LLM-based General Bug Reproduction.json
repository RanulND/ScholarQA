{"Title": "Large Language Models are Few-shot Testers: Exploring LLM-based General Bug Reproduction", "Doi": "10.1109/ICSE48619.2023.00194", "Authors": ["s. kang", "j. yoon", "s. yoo"], "Key Words": ["test generation", "natural language processing", "software engineering"], "Abstract": "many automated test generation techniques have been developed to aid developers with writing tests. to facilitate full automation most existing techniques aim to either increase coverage or generate exploratory inputs. however existing test generation techniques largely fall short of achieving more semantic objectives such as generating tests to reproduce a given bug report. reproducing bugs is nonetheless important as our empirical study shows that the number of tests added in open source repositories due to issues was about 28% of the corresponding project test suite size. meanwhile due to the difficulties of transforming the expected program semantics in bug reports into test oracles existing failure reproduction techniques tend to deal exclusively with program crashes a small subset of all bug reports. to automate test generation from general bug reports we propose libro a framework that uses large language models  llms  which have been shown to be capable of performing code related tasks. since llms themselves cannot execute the target buggy code we focus on post processing steps that help us discern when llms are effective and rank the produced tests according to their validity. our evaluation of libro shows that on the widely studied defects4j benchmark libro can generate failure reproducing test cases for 33% of all studied cases  251 out of 750  while suggesting a bug reproducing test in first place for 149 bugs. to mitigate data contamination  i.e. the possibility of the llm simply remembering the test code either partially or in whole  we also evaluate libro against 31 bug reports submitted after the collection of the llm training data terminated  libro produces bug reproducing tests for 32% of the studied bug reports. overall our results show libro has the potential to significantly enhance developer efficiency by automatically generating tests from bug reports.", "Pub Date": "2023-07-14"}