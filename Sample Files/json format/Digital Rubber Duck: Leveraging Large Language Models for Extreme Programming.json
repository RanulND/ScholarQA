{"Title": "Digital Rubber Duck: Leveraging Large Language Models for Extreme Programming", "Doi": "10.1109/CSCE60160.2023.00051", "Authors": ["t. elvira", "t. t. procko", "j. o. couder", "o. ochoa"], "Key Words": ["software engineering", "code refactoring", "walkthroughs", "extreme programmaing", "gpt-4", "chatgpt paper type - \u201a\u00e4\u00faregular research paper\u201a\u00e4\u00f9"], "Abstract": "the recent prevalence of large language models  large language model  e.g. gpt 3.5 and gpt 4 has brought about a new age of man computer symbiosis where large language model are employed for a litany of creative constructive scientific or otherwise content generative tasks e.g. as general chatbot assistants writing editors digital subject matter experts programming consultants and so on. of interest to software engineers is the concept of \u201a\u00e4\u00farubber duck debugging\u201a\u00e4\u00f9 which is the act of expressing code line by line in natural language to an inanimate object e.g. a rubber duck for the purpose of elucidating potential issues that can then be corrected. in this paper we detail a workflow process that leverages the concept of rubber duck debugging replacing the duck with a capable large language model e.g. gpt 4. we call it digital rubber duck programming. furthermore the extreme programming  xp  method an implementation of the agile paradigm is considered as easily integrated with the proposed workflow as xp is performed in pairs  much like the modern software engineer works in pairwise fashion with an large language model  and because xp places emphasis on performing extensive code reviews and unit testing all code which capable large language model like gpt-4 can facilitate.", "Pub Date": "2024-04-09"}