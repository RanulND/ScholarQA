{"Title": "Benchmarking Container Technologies on ARM-Based Edge Devices", "Doi": "10.1109/ACCESS.2023.3321274", "Authors": ["s. kaiser", "a. \u2248\u00fc. tosun", "t. korkmaz"], "Key Words": ["edge computing", "container", "docker", "singularity", "podman", "internet of things (iot)", "benchmark", "computer vision", "data science"], "Abstract": "internet of things  iot  devices continuously gather data and send the data to the cloud for further processing. however with the recent trend of increasing number of iot devices billions of devices are anticipated to send data to the cloud eventually impacting performance and cost. to solve this problem one way is to process data locally inside edge nodes. the edge nodes are closer to the iot devices and improve the overall performance of the system by distributing cloud tasks in edge devices. edge devices are generally resource constrained with limited ram cpu and storage. container technologies are ideal in edge nodes due to their isolation and being lightweight. a benchmarking scheme for containers on edge devices can help compare container technologies hardware devices and architectures and software. however there is not sufficient research in this direction. so in this work we take a step towards developing this benchmark. we explore and evaluate the performance efficiency and suitability of different container technologies including docker podman and singularity in the context of edge computing on arm based devices. our experiments include evaluating computer vision applications that employ haar cascades hog cnn with yolo algorithm and data science workloads commonly encountered in edge computing scenarios. we devised sets of performance metrics to assess container technology including waiting time receiving time processing time resource utilization and throughput. besides we investigate how different container technologies optimize resource utilization and compare their efficiency on arm based edge devices. our benchmarking analysis yielded valuable insights into the strengths and limitations of each container technology. our results reveal that docker podman and singularity containers exhibit diverse resource consumption patterns and network efficiency. docker container has better cpu and ram utilization for most applications. docker also boasts the lowest waiting time of approximately 0.9 seconds comparable to native performance. in terms of processing time docker excels in car detection  0.12 seconds  while singularity and podman outperform docker in object detection. notably native systems exhibit a remarkable improvement over containers  average of 1.2 seconds  in object detection  0.98 seconds  highlighting the challenges of resource intensive deep neural network algorithms on edge devices. based on our findings we offer practical advice for picking the best container technology for specific use cases in arm based edge computing. we also offer a set of benchmarking approaches and metrics that can be used to drive future research on container technologies on arm platforms.", "Pub Date": "2023-10-09"}