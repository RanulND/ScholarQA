{"Title": "Dependent Task Scheduling and Offloading for Minimizing Deadline Violation Ratio in Mobile Edge Computing Networks", "Doi": "10.1109/JSAC.2022.3233532", "Authors": ["s. liu", "y. yu", "x. lian", "y. feng", "c. she", "p. l. yeoh", "l. guo", "b. vucetic", "y. li"], "Key Words": ["mobile edge computing (mec)", "computation offloading", "task-dependency requirements", "deadline violation ratio (dvr)", "task sequencing algorithm", "deep deterministic policy gradient (ddpg)"], "Abstract": "this paper considers computation offloading for mobile applications with task dependency requirements in mobile edge computing  mec  systems. based on the online arrival patterns and various delay constraints of practical applications we focus on minimizing the system deadline violation ratio  dvr  to improve the overall reliability performance. specifically we propose a dvr minimization computation offloading scheme with task migration and merging in which the task migration and merging model is designed to construct an overall directed acyclic graph  dag  for all currently dependent tasks. we consider a multi slot mec system where applications arrive slot by slot without prior knowledge of future arrivals. then given the number of application arrivals at each time slot we equivalently transform the dvr minimization problem into a problem that maximizes the number of completed applications in a finite time horizon. the above problem is challenging to determine the optimal task execution order for different applications with various task dependencies and delay constraints. to address this we develop a migration enabled multi priority task sequencing algorithm which creatively introduces several task priority metrics and determines the optimal task execution order. then a deep deterministic policy gradient  ddpg  based learning algorithm is developed to find the optimal offloading policy. experimental results demonstrate that the proposed scheme can reduce the system dvr by 60.34%~70.3% compared with existing benchmark schemes under various network scenarios.", "Pub Date": "2023-01-18"}