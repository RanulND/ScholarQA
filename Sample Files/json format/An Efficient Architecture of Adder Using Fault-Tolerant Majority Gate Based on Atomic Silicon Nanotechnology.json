{"Title": "An Efficient Architecture of Adder Using Fault-Tolerant Majority Gate Based on Atomic Silicon Nanotechnology", "Authors": ["s. -s. ahmadpour", "n. jafari navimipour", "a. n. bahar", "s. yalcin"], "Pub Date": "2023-09-19", "Abstract": "it is expected that complementary metal oxide semiconductor  cmos  implementation with ever smaller transistors will soon face significant issues such as device density power consumption and performance due to the requirement for challenging fabrication processes. therefore a new and promising computation paradigm nanotechnology can replace cmos technology. in addition a new frontier in computing is opened up by nanotechnology called atomic silicon which has the same extraordinary behavior as quantum dots. on the other hand atomic silicon circuits are highly prone to defects so suggested fault tolerant structures in this technology play important roles. the full adders have gained popularity and find widespread use in efficiently solving mathematical problems. in the following article we will explore the development of an efficient fault tolerant 3 input majority gate  ft mv3  using dbs further enhancing the capabilities of digital circuits. a rule based approach to the redundant db achieves a less complex and more robust atomic silicon layout for the mv3. we use the siqad tool to simulate proposed circuits. in addition to confirm the efficiency of the proposed gate all common defects such as single and double dangling bond omission defects and db dislocation defects are examined. the suggested gate is 100% and 66.66% tolerant against single and double db omission defects respectively. furthermore a new adder design is introduced using the suggested ft mv3 gate. the results show that the suggested adder is 44.44% and 35.35% tolerant against single and double db omission defects. finally a fault tolerant four bit adder is designed based on the proposed adder.", "Doi": "10.1109/TNANO.2023.3309908", "Key Words": ["atomic silicon", "silicon quantum atomic designer", "dangling bond (db)", "fault-tolerant"]}