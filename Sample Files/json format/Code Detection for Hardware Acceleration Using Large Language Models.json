{"Title": "Code Detection for Hardware Acceleration Using Large Language Models", "Doi": "10.1109/ACCESS.2024.3372853", "Authors": ["p. a. mart\u221a\u2260nez", "g. bernab\u221a\u00a9", "j. m. garc\u221a\u2260a"], "Key Words": ["code detection", "compilers", "heterogeneous computing", "high-performance computing", "large language model"], "Abstract": "large language models  large language model  have been massively applied to many tasks often surpassing state of the art approaches. while their effectiveness in code generation has been extensively studied  e.g. alphacode  their potential for code detection remains unexplored. this work presents the first analysis of code detection using large language model. our study examines essential kernels including matrix multiplication convolution fast fourier transform and lu factorization implemented in c c++. we propose both a preliminary naive prompt and a novel prompting strategy for code detection. results reveal that conventional prompting achieves great precision but poor accuracy  67.5% 22.5% 79.5% and 64% for gemm convolution fft and lu factorization respectively  due to a high number of false positives. our novel prompting strategy substantially reduces false positives resulting in excellent overall accuracy  91.2% 98% 99.7% and 99.7% respectively . these results pose a considerable challenge to existing state of the art code detection methods.", "Pub Date": "2024-03-08"}