{"Title": "Towards Memory-Efficient Validation of Large XMI Models", "Doi": "10.1109/MODELS-C59198.2023.00053", "Authors": ["s. jahanbin", "d. kolovos", "s. gerasimou"], "Key Words": ["model validation", "partial loading", "memory management", "file-based model", "xmi model", "model-driven engineering"], "Abstract": "model validation is a common activity in model driven engineering where a model is checked against a set of consistency rules  also referred to as constraints  to assess whether it has desirable properties further to those that can be expressed by the metamodel that it conforms to  e.g. to check that all states in a state machine are reachable or that no classes in an object oriented model are involved in circular inheritance relationships . such constraints can be written in general purpose  e.g. java  or in task specific validation languages such as the object constraint language  ocl  or the epsilon validation language  evl . to check a model that is serialised in the omg standard xmi format against a set of constraints the current state of practice requires loading the entire model into memory first. this can be problematic in cases where loading the model into memory requires more memory  heap space  than is available in the host machine and is sub optimal when carrying out distributed model validation over a number of machines. in this paper we present an approach that uses static analysis to split sets of model validation constraints into sub groups that operate on smaller subsets of the model. combined with existing xmi partial loading capabilities the proposed approach makes it possible to check larger xmi   based models on a single machine and to potentially improve efficiency when checking models in a distributed setting.", "Pub Date": "2023-12-22"}