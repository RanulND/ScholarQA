{"Title": "Elastic Optimization for Stragglers in Edge Federated Learning", "Doi": "10.26599/BDMA.2022.9020046", "Authors": ["k. sultana", "k. ahmed", "b. gu", "h. wang"], "Key Words": ["edge computing", "federated learning", "distributed machine learning", "regularization", "stragglers"], "Abstract": "to fully exploit enormous data generated by intelligent devices in edge computing edge federated learning  efl  is envisioned as a promising solution. the distributed collaborative training in efl deals with delay and privacy issues compared to traditional centralized model training. however the existence of straggling devices responding slow to servers degrades model performance. we consider data heterogeneity from two aspects  high dimensional data generated at edge devices where the number of features is greater than that of observations and the heterogeneity caused by partial device participation. with large number of features computation overhead on the devices increases causing edge devices to become stragglers. and incorporation of partial training results causes gradients to be diverged which further exaggerates when more training is performed to reach local optima. in this paper we introduce elastic optimization methods for stragglers due to data heterogeneity in edge federated learning. specifically we define the problem of stragglers in efl. then we formulate an optimization problem to be solved at edge devices. we customize a benchmark algorithm fedavg to obtain a new elastic optimization algorithm  feden  which is applied in local training of edge devices. feden mitigates stragglers by having a balance between lasso and ridge penalization thereby generating sparse model updates and enforcing parameters as close as to local optima. we have evaluated the proposed model on mnist and cifar-10 datasets. simulated experiments demonstrate that our approach improves run time training performance by achieving average accuracy with less communication rounds. the results confirm the improved performance of our approach over benchmark algorithms.", "Pub Date": "2023-08-29"}