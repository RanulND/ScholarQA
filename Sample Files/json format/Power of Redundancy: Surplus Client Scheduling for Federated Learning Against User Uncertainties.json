{"Title": "Power of Redundancy: Surplus Client Scheduling for Federated Learning Against User Uncertainties", "Doi": "10.1109/TMC.2022.3178167", "Authors": ["y. li", "f. li", "l. chen", "l. zhu", "p. zhou", "y. wang"], "Key Words": ["federated learning", "client scheduling", "task replication", "bandits"], "Abstract": "federated learning  fl  has reshaped the learning paradigm by overcoming privacy concerns and siloed data issues. in fl an aggregator schedules a set of mobile users  mus  to collectively train a global model with their local datasets and subsequently aggregates their model updates to obtain a new global model. however the users have many uncertainties like unstable network connections and volatile availability which leads to the straggler problem and deteriorates the efficiency of the fl system. besides the issue of non iid datasets hinders the convergence performance of the global model. to hurdle the user uncertainties we associate a deadline with the decision in each round and partially collect mus\u201a\u00e4\u00f4 updates after the deadline which can be achieved by considering surplus budget constraints. moreover we introduce fairness constraints for the non iid issue where we ensure that all mus have chances to be scheduled each round but the mus with large and diverse local datasets will preferentially be selected. we propose a deadline aware task replication for surplus client scheduling policy called feddate cs. feddate cs is developed based on a novel contextual combinatorial multi armed bandit  ccmab  learning framework with fairness guarantee. we extend the hypercube based ccmab framework by integrating the lyapunov queuing technique and rigorously prove that feddate cs achieves a sublinear regret bound when learning the optimal client scheduling solution under uncertainties. moreover our feddate cs provides an $[\\mathcal {o} 1/v \\mathcal {o} v ]$[o 1/v o v ] regret fairness tradeoff for any fairness control factor $v>0$v>0. we conduct extensive evaluations to verify the significant superiority of feddate cs over benchmarks.", "Pub Date": "2023-08-04"}