{"Title": "Language Agnostic Model Checking for SDL", "Doi": "10.1109/MODELS-C59198.2023.00052", "Authors": ["e. gaudin", "e. brunel", "m. brumbulli"], "Key Words": ["sdl", "z.100", "obp2", "model checking", "property verification", "psc"], "Abstract": "sdl has been designed to describe communicating systems in a detailed and precise way. due to its asynchronous nature the behaviour is based on state machines running concurrently making model checking of an sdl system a challenge. creation and deletion of dynamic instances with pids randomly computed on the fly can create different system states that should be considered equivalent. the number of possible inputs creates such a number of system states that it is often too large to handle. furthermore during exploration some internal variables because of their values might create new states while they actually do not influence the behavior of the system. finally existing model checkers are based on their own language which is often not aligned with the modeling language sdl for our concern. after four years of collaboration on several industrial projects ensta bretagne and pragmadev came up with a new approach to system verification. in this paper we will present the result of this work. it combines four main ideas  1  use an execution engine which is natively based on the modeling language and separated from the model checker 2  restrict the possible input values without modifying the system itself 3  identify internal variables that are irrelevant to the system state 4  re assign pids and sort the instances to identify the system state.", "Pub Date": "2023-12-22"}