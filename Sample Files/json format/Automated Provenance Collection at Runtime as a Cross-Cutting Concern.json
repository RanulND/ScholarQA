{"Title": "Automated Provenance Collection at Runtime as a Cross-Cutting Concern", "Doi": "10.1109/MODELS-C59198.2023.00057", "Authors": ["o. j. reynolds", "a. garc\u221a\u2260a-dom\u221a\u2260nguez", "n. bencomo"], "Key Words": ["provenance", "runtime models", "aspect-oriented programming"], "Abstract": "autonomous decision making is increasingly applied to handle highly dynamic uncertain environments  as incorrect decisions can cause serious harm to individuals or society there is a need for accountability. for systems that use runtime models to represent their observations and decisions one possible solution to understand their behaviour is to study the provenance of the changes to those runtime models. in this paper we investigate how to use aspect oriented programming  aop  to solve the cross cutting concern of automated provenance collection through aspect oriented programming as a generalisation of previous work which could only operate on models created with the eclipse modeling framework. we present a variety of patterns to identify the elements of the runtime model that are of interest for automated provenance collection as well as the additional supporting infrastructure needed to cover the gaps left by the lack of a dedicated modelling framework. two case studies have been conducted. the first study replicates past results with an emf based system using aop instead of customising the code generation and compares runtime overheads and required developer effort. the other case study investigates the use of cronista with aop on a system using plain java classes for its runtime model. the results show that the new aop based approach for automated provenance collection can effectively replace the old generator based approach while being applicable to a broader range of systems at a cost of a small increase in runtime memory usage for emf based runtime models.", "Pub Date": "2023-12-22"}