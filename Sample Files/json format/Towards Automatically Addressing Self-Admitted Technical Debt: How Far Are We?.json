{"Title": "Towards Automatically Addressing Self-Admitted Technical Debt: How Far Are We?", "Doi": "10.1109/ASE56229.2023.00103", "Authors": ["a. mastropaolo", "m. di penta", "g. bavota"], "Key Words": ["self-admitted technical debt", "pre-trained models", "machine learning for code"], "Abstract": "upon evolving their software organizations and individual developers have to spend a substantial effort to pay back technical debt i.e the fact that software is released in a shape not as good as it should be e.g in terms of functionality reliability or maintainability. this paper empirically investigates the extent to which technical debt can be automatically paid back by neural based generative models and in particular models exploiting different strategies for pre training and fine tuning. we start by extracting a dateset of 5039 self admitted technical debt  satd  removals from 595 open source projects. satd refers to technical debt instances documented  e.g via code comments  by developers. we use this dataset to experiment with seven different generative deep learning  dl  model configurations. specifically we compare transformers pre trained and fine tuned with different combinations of training objectives including the fixing of generic code changes satd removals and satd comment prompt tuning. also we investigate the applicability in this context of a recently available large language model  large language model  based chat bot. results of our study indicate that the automated repayment of satd is a challenging task with the best model we experimented with able to automatically fix \u201a\u00e0\u00ba2% to 8% of test instances depending on the number of attempts it is allowed to make. given the limited size of the fine tuning dataset  \u201a\u00e0\u00ba5k instances  the model pre training plays a fundamental role in boosting performance. also the ability to remove satd steadily drops if the comment documenting the satd is not provided as input to the model. finally we found general purpose large language model to not be a competitive approach for addressing satd.", "Pub Date": "2023-11-08"}