{"Title": "Flover: A Temporal Fusion Framework for Efficient Autoregressive Model Parallel Inference", "Doi": "10.1109/HiPC58850.2023.00026", "Authors": ["j. yao", "n. alnaasan", "t. chen", "a. shafi", "h. subramoni", "d. k. d. panda"], "Key Words": ["autoregressive model", "inference frameworks", "parallel pipelining", "distributed inference"], "Abstract": "autoregressive models despite their commendable performance in a myriad of generative tasks face challenges stemming from their inherently sequential structure. inference on these models by design harnesses a temporal dependency where the current token probability distribution is conditioned on preceding tokens. this inherent characteristic severely impedes computational efficiency during inference as a typical inference request can require more than thousands of tokens where generating each token requires a load of entire model weights making the inference more memory bound. the large overhead becomes profound in real deployment where requests arrive randomly necessitating various generation lengths. existing solutions such as dynamic batching and concurrent instances introduce significant response delays and bandwidth contention falling short of achieving optimal latency and throughput. to address these shortcomings we propose flover   a temporal fusion framework for efficiently inferring multiple requests in parallel. we deconstruct the general generation pipeline into pre processing and token generation and equip the framework with a dedicated work scheduler for fusing the generation process temporally across all requests. by orchestrating the token level parallelism flover exhibits optimal hardware efficiency and significantly spares the system resources. by further employing a fast buffer reordering algorithm that allows memory eviction of finished tasks it brings over 11\u221a\u00f3 inference speedup on gpt and 16 \u221a\u00f3 on llama compared to the cutting edge solutions provided by nvidia fastertransformer. crucially by leveraging the advanced tensor parallel technique flover proves efficacious across diverse computational landscapes from single gpu setups to distributed scenarios thereby offering robust performance optimization that adapts to variable use cases.", "Pub Date": "2024-04-05"}