{"Title": "Efficient GPU Implementations of Post-Quantum Signature XMSS", "Authors": ["z. wang", "x. dong", "h. chen", "y. kang"], "Pub Date": "2023-01-26", "Abstract": "the national institute of standards and technology  nist  approved xmss as part of the post quantum cryptography  pqc  development effort in 2018. xmss is currently one of only two standardized pqc algorithms but its performance limits its use. for example the fastest record for some standardized parameters still takes more than a minute to generate a keypair. in this article we present the first gpu implementation for xmss and its variant xmss$^{\\mathsf {mt}}$mt. the high parallelism of gpus is especially effective for reducing latency in key generation and improving throughput for signing and verifying. in order to meet various application scenarios we provide three parallel xmss schemes  algorithmic parallelism multi keypair data parallelism and single keypair data parallelism. for these schemes we design custom parallel strategies that use more than 10000 cores for all parameters provided by nist. in addition we analyze the availability of most previous serial optimizations and explore numerous techniques to fully exploit gpu performance. our evaluations are made with the xmssmt sha2 20/2 256 parameter set on a geforce rtx 3090. the result shows the key generation latency is 3.20 ms a speedup of 21899\u221a\u00f3 compared to the gpu ported version which is also 54\u221a\u00f3 speedup faster than the fastest work  174 ms . when 16384 tasks are executed the throughput  task s  for signing verifying in the single key and multi key cases is 311424/415100 and 145100/419887 respectively. compared to the throughput for signing verifying  1695/4000  of the fastest work we obtain a speedup of 184\u221a\u00f3/104\u221a\u00f3 and 86\u221a\u00f3/105\u221a\u00f3 in single key and multi key cases respectively.", "Doi": "10.1109/TPDS.2022.3233348", "Key Words": ["post-quantum cryptography", "stateful hash-based signatures", "xmss", "xmss   $^{\\mathsf {mt}}$       mt", "parallel computing", "gpu"]}