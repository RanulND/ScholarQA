{"Title": "A Closer Look at Different Difficulty Levels Code Generation Abilities of ChatGPT", "Doi": "10.1109/ASE56229.2023.00096", "Authors": ["d. yan", "z. gao", "z. liu"], "Key Words": ["code generation", "program competition", "chat-gpt", "large language model", "clean code"], "Abstract": "code generation aims to generate source code implementing human requirements illustrated with natural language specifications. with the rapid development of intelligent software engineering automated code generation has become a hot research topic in both artificial intelligence and software engineering and researchers have made significant achievements on code generation. more recently large language models  llms  have demonstrated outstanding performance on code generation tasks such as chatgpt released by openai presents the fantastic potential on automated code generation. however the existing studies are limited to exploring llms' ability for generating code snippets to solve simple programming problems the task of competition level code generation has never been investigated. the specifications of the programming competition are always complicated and require the specific input output format as well as the high level algorithmic reasoning ability. in this study we conduct the first large empirical study to investigate the zero shot learning ability of chatgpt for solving competition programming problems. specifically we warm up the design of prompts by using the human eval dataset. then we apply the well designed prompt to the competition level code generation dataset namely apps to further explore the effectiveness of using chatgpt for solving competition problems. we collect chatgpt outputs on 5000 code competition problems the evaluation results show that it can successfully pass 25.4% test cases. by further feeding extra information  e.g test failed information  to chatgpt we observe that chatgpt has the potential to fix partial pass into a fully pass program. moreover we investigate the solutions generated by llms and the existing solutions we find that it prefers to directly copy the code instead of re write when facing more difficult problems. finally we evaluate the code quality generated by chatgpt in terms of \u201a\u00e4\u00facode cleanness\u201a\u00e4\u00f9 we observe that the generated codes are with small functions and file sizes which are in line with the standard of clean code.", "Pub Date": "2023-11-08"}