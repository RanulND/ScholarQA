{"Title": "6G-Empowered Offloading for Realtime Applications in Multi-Access Edge Computing", "Doi": "10.1109/TNSE.2022.3188921", "Authors": ["h. huang", "q. ye", "y. zhou"], "Key Words": ["6g", "multi-access edge computing", "realtime applications", "offloading", "edge-assisted learning"], "Abstract": "multi access edge computing  mec  is a promising solution to the resource shortage problem on mobile devices. with mec a fraction of the computational tasks on mobile devices could be offloaded to edge servers. over the past years a series of machine learning based offloading methods for mec have been proposed to reduce the completion time of computational tasks. however most of the existing methods do not work well for realtime applications which involve tasks with rigorous deadline constraints. in addition offloading data intensive tasks via the latest wireless networks such as lte and 5g could lead to unsatisfactory transmission delays. furthermore with the state of the art learning based methods both the training and inference operation of the learning algorithm are carried out on mobile devices undesirably leaving less computation resources for computational tasks on mobile devices. in this paper we propose a 6g empowered learning based offloading scheme melo which can be used to make appropriate offloading decisions for realtime tasks. specifically the task offloading problem is first formulated as a markov decision process. thereafter the problem is solved with a reinforcement learning  rl  algorithm td3. in addition 6g is adopted as the communication infrastructure to sufficiently support the data transfer between mobile devices and edge servers. furthermore to leave more resources on mobile devices we devise a novel learning architecture eala. with eala the training and inference operation of a learning algorithm are decoupled. the training operation is carried out on edge servers while the inference operation is performed on mobile devices. our experimental results indicate that melo outperforms the existing offloading methods in terms of task completion time.", "Pub Date": "2023-04-24"}