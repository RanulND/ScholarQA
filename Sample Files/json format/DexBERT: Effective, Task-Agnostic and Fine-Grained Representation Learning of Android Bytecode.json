{"Title": "DexBERT: Effective, Task-Agnostic and Fine-Grained Representation Learning of Android Bytecode", "Doi": "10.1109/TSE.2023.3310874", "Authors": ["t. sun", "k. allix", "k. kim", "x. zhou", "d. kim", "d. lo", "t. f. bissyand\u221a\u00a9", "j. klein"], "Key Words": ["representation learning", "android app analysis", "code representation", "malicious code localization", "defect prediction"], "Abstract": "the automation of an increasingly large number of software engineering tasks is becoming possible thanks to machine learning  ml . one foundational building block in the application of ml to software artifacts is the representation of these artifacts  e.g. source code or executable code  into a form that is suitable for learning. traditionally researchers and practitioners have relied on manually selected features based on expert knowledge for the task at hand. such knowledge is sometimes imprecise and generally incomplete. to overcome this limitation many studies have leveraged representation learning delegating to ml itself the job of automatically devising suitable representations and selections of the most relevant features. yet in the context of android problems existing models are either limited to coarse grained whole app level  e.g. apk2vec  or conducted for one specific downstream task  e.g. smali2vec . thus the produced representation may turn out to be unsuitable for fine grained tasks or cannot generalize beyond the task that they have been trained on. our work is part of a new line of research that investigates effective task agnostic and fine grained universal representations of bytecode to mitigate both of these two limitations. such representations aim to capture information relevant to various low level downstream tasks  e.g. at the class level . we are inspired by the field of natural language processing where the problem of universal representation was addressed by building universal language models such as bert whose goal is to capture abstract semantic information about sentences in a way that is reusable for a variety of tasks. we propose dexbert a bert like language model dedicated to representing chunks of dex bytecode the main binary format used in android applications. we empirically assess whether dexbert is able to model the dex language and evaluate the suitability of our model in three distinct class level software engineering tasks  malicious code localization defect prediction and component type classification. we also experiment with strategies to deal with the problem of catering to apps having vastly different sizes and we demonstrate one example of using our technique to investigate what information is relevant to a given task.", "Pub Date": "2023-10-18"}