{"Title": "Automated Repair of Programs from Large Language Models", "Doi": "10.1109/ICSE48619.2023.00128", "Authors": ["z. fan", "x. gao", "m. mirchev", "a. roychoudhury", "s. h. tan"], "Key Words": ["large language model", "program repair"], "Abstract": "large language models such as codex have shown the capability to produce code for many programming tasks. however the success rate of existing models is low especially for complex programming tasks. one of the reasons is that language models lack awareness of program semantics resulting in incorrect programs or even programs which do not compile. in this paper we systematically study whether automated program repair  apr  techniques can fix the incorrect solutions produced by language models in leetcode contests. the goal is to study whether apr techniques can enhance reliability in the code produced by large language models. our study revealed that   1  automatically generated code shares common programming mistakes with human crafted solutions indicating apr techniques may have potential to fix auto generated code   2  given bug location information provided by a statistical fault localization approach the newly released codex edit mode which supports editing code is similar to or better than existing java repair tools tbar and recoder in fixing incorrect solutions. by analyzing the experimental results generated by these tools we provide several suggestions   1  enhancing apr tools to surpass limitations in patch space  e.g. introducing more flexible fault localization  is desirable   2  as large language models can derive more fix patterns by training on more data future apr tools could shift focus from adding more fix patterns to synthesis semantics based approaches  3  combination of language models with apr to curate patch ingredients is worth studying.", "Pub Date": "2023-07-14"}