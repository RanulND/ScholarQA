{"Title": "Drill: Log-based Anomaly Detection for Large-scale Storage Systems Using Source Code Analysis", "Doi": "10.1109/IPDPS54959.2023.00028", "Authors": ["d. zhang", "c. egersdoerfer", "t. mahmud", "m. zheng", "d. dai"], "Key Words": ["anomaly detection", "sentiment analysis", "static analysis", "lustre"], "Abstract": "large scale storage systems a critical part of modern computing systems are subject to various runtime bugs failures and anomalies in production. identifying their anomalies at runtime is thus critical for users and administrators. since runtime logs record the important status of the systems log based anomaly detection has been studied extensively for timely identifying system malfunctions. however existing log based anomaly detection solutions share common limitations in representing log entries accurately and robustly hence can not effectively handle log entries that were not seen in the historical logs which is a common real world scenario due to logs' inherent rarity and the continuous evolution of the systems. to address the issues of existing methods we propose drill a new log pre processing method to generate high quality vector representation of runtime logs by leveraging both storage system specific sentiment classifying language models and log contexts built from the source code. through extensive evaluations of two representative distributed storage systems  apache hdfs and lustre  we show that drill can achieve up to 41% improvement when compared with state of the art anomaly detection solutions showing it is a promising solution for general anomaly detection.", "Pub Date": "2023-07-18"}