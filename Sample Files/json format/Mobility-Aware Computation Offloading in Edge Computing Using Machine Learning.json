{"Title": "Mobility-Aware Computation Offloading in Edge Computing Using Machine Learning", "Doi": "10.1109/TMC.2021.3085527", "Authors": ["e. f. maleki", "l. mashayekhy", "s. m. nabavinejad"], "Key Words": ["edge computing", "computation offloading", "mobility", "sampling", "dynamic programming"], "Abstract": "cloudlets are resource rich computing infrastructures of edge computing that are located at physical proximity of users to provide one hop high bandwidth wireless access to additional computational resources. they enable computation offloading for user applications which compensates for the resource limitation of user devices by providing ultra low latency processing for their applications. although the computation capability of user devices is dramatically augmented by offloading spatio temporal uncertainties due to user mobility and changes in application specifications bring the most challenging obstacles in deciding where to offload to provide minimum latency. in this paper we focus on these challenges by designing efficient offloading approaches that take into account these uncertainties and dynamics in order to minimize the turnaround time of the applications which is constituted by offloading latency migration delay and execution time. we first formulate this np hard problem as an integer programming model to obtain optimal offloading decisions. we tackle its intractability by designing two novel offloading approaches called s oamc and g oamc that fully assign applications to cloudlets by considering their expected future locations and specifications predicted by matrix completion a machine learning method. s oamc is a sampling based approximation dynamic programming approach that enhances scalability and obtains near optimal solutions. g oamc is a fast greedy based approach for finding low turnaround time offloading decisions. we conduct extensive experiments to assess the performance of our proposed approaches. the results show that s oamc and g oamc lead to near optimal turnaround time in a reasonable time and they both obtain low migration rates.", "Pub Date": "2022-12-05"}